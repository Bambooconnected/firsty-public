{
  "openapi": "3.1.0",
  "info": {
    "title": "Firsty Partners API",
    "contact": {
      "name": "Support",
      "email": "support@firsty.app"
    },
    "version": "1.1"
  },
  "servers": [
    {
      "url": "https://backoffice.test.firsty.app/api/v1",
      "description": "Firsty Test Server"
    },
    {
      "url": "https://backoffice.firsty.app/api/v1",
      "description": "Firsty Production Server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Partner Main"
    },
    {
      "name": "Partner Users"
    },
    {
      "name": "Partner Subscriptions"
    }
  ],
  "paths": {
    "/partners/auth/token": {
      "get": {
        "tags": [
          "Partner Main"
        ],
        "summary": "Auth Token",
        "description": "Returns Bearer Token for the Firsty Partner",
        "operationId": "AuthToken",
        "parameters": [
          {
            "name": "client-id",
            "in": "header",
            "description": "Identifier for the Firsty Partner",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "{{partnerClientId}}"
            }
          },
          {
            "name": "client-secret",
            "in": "header",
            "description": "Password for the Firsty Partner",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "{{partnerClientSecret}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the auth token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Client id and client secret must be provided in headers"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}": {
      "get": {
        "tags": [
          "Partner Main"
        ],
        "summary": "Partner Information",
        "description": "Returns basic information about the Partner",
        "operationId": "PartnerInformation",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Partner information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerInformationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users": {
      "get": {
        "tags": [
          "Partner Users"
        ],
        "summary": "List Partner Users",
        "description": "Returns all users of the Partner",
        "operationId": "ListUsers",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of partner users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "No user found"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Partner Users"
        ],
        "summary": "Create New Partner User",
        "description": "Creates a new user for the Partner",
        "operationId": "NewUser",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "In Pilot phase, you are limited to 3 users"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users/{partnerUserIccId}": {
      "get": {
        "tags": [
          "Partner Users"
        ],
        "summary": "User Information",
        "description": "Returns information about the Partner User",
        "operationId": "UserInformation",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerUserIccId",
            "in": "path",
            "description": "The user ICC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationResponse"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users/{partnerUserIccId}/usage": {
      "get": {
        "tags": [
          "Partner Users"
        ],
        "summary": "Usage Information",
        "description": "Returns daily usage information of the Partner User",
        "operationId": "UsageInformation",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerUserIccId",
            "in": "path",
            "description": "The user ICC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usage information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUsageResponse"
                }
              }
            }
          },
          "400": {
            "description": "No user or active subscription found"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users/subscription": {
      "post": {
        "tags": [
          "Partner Users"
        ],
        "summary": "New Partner User with a Subscription",
        "description": "Creates a new Firsty User with a Subscription",
        "operationId": "NewPartnerUserWithSubscription",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Subscription creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User with subscription created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users/{partnerUserIccId}/subscriptions": {
      "get": {
        "tags": [
          "Partner Subscriptions"
        ],
        "summary": "List Partner User Subscriptions",
        "description": "Lists Firsty Subscriptions given to the Partner User",
        "operationId": "ListPartnerUserSubscriptions",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerUserIccId",
            "in": "path",
            "description": "The user ICC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of subscriptions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No user found"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Partner Subscriptions"
        ],
        "summary": "New Partner User Subscription",
        "description": "Creates a new Firsty Subscription for the Partner User",
        "operationId": "NewPartnerUserSubscription",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerUserIccId",
            "in": "path",
            "description": "The user ICC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Subscription creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscription created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "No user found or invalid input"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users/{partnerUserIccId}/subscriptions/{transactionId}/activate": {
      "patch": {
        "tags": [
          "Partner Subscriptions"
        ],
        "summary": "Activate Partner User Subscription",
        "description": "Activates Firsty Subscription for the Partner User",
        "operationId": "ActivatePartnerUserSubscription",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerUserIccId",
            "in": "path",
            "description": "The user ICC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "No user or subscription found"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    },
    "/partners/{partnerClientId}/users/{partnerUserIccId}/subscriptions/{transactionId}/boost": {
      "patch": {
        "tags": [
          "Partner Subscriptions"
        ],
        "summary": "Boost Partner User Subscription",
        "description": "Gives a daily Boost for the Firsty Subscription of the Partner User",
        "operationId": "BoostPartnerUserSubscription",
        "parameters": [
          {
            "name": "partnerClientId",
            "in": "path",
            "description": "The partner client identifier",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerUserIccId",
            "in": "path",
            "description": "The user ICC ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "The transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription boosted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "No user or active subscription found"
          },
          "404": {
            "description": "Partner not found"
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "AuthTokenResponse": {
        "title": "AuthTokenResponse",
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Bearer token for authentication"
          }
        },
        "required": ["token"]
      },
      "PartnerInformationResponse": {
        "title": "PartnerInformationResponse",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Partner name"
          },
          "clientId": {
            "type": "string",
            "description": "Partner client ID"
          },
          "code": {
            "type": "string",
            "description": "Partner code"
          },
          "link": {
            "type": "string",
            "description": "Partner link"
          },
          "settings": {
            "$ref": "#/components/schemas/PartnerSettings"
          }
        },
        "required": ["name", "clientId", "code", "link", "settings"]
      },
      "PartnerSettings": {
        "title": "PartnerSettings",
        "type": "object",
        "properties": {
          "isPriceVisible": {
            "type": "boolean",
            "description": "Whether prices are visible"
          },
          "isAddPromoVisible": {
            "type": "boolean",
            "description": "Whether add promo is visible"
          },
          "isGlobalPlanOnly": {
            "type": "boolean",
            "description": "Whether only global plans are available"
          },
          "isPartnerDynamicLinkOneTimeUse": {
            "type": "boolean",
            "description": "Whether partner dynamic links are one-time use"
          },
          "canSendPromotionalOneDay": {
            "type": "boolean",
            "description": "Whether one-day promotional messages can be sent"
          },
          "emailSettings": {
            "$ref": "#/components/schemas/EmailSettings"
          }
        },
        "required": ["isPriceVisible", "isAddPromoVisible", "isGlobalPlanOnly", "isPartnerDynamicLinkOneTimeUse", "canSendPromotionalOneDay", "emailSettings"]
      },
      "EmailSettings": {
        "title": "EmailSettings",
        "type": "object",
        "properties": {
          "allowAllFromDomain": {
            "type": "boolean",
            "description": "Whether to allow all emails from domain"
          },
          "allowDomainRegistration": {
            "type": "boolean",
            "description": "Whether to allow domain registration"
          }
        },
        "required": ["allowAllFromDomain", "allowDomainRegistration"]
      },
      "NewUserRequest": {
        "title": "NewUserRequest",
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External identifier for the user"
          }
        }
      },
      "NewUserResponse": {
        "title": "NewUserResponse",
        "type": "object",
        "properties": {
          "iccId": {
            "type": "string",
            "description": "ICC ID of the user"
          },
          "externalId": {
            "type": "string",
            "description": "External identifier for the user"
          },
          "activationCode": {
            "type": "string",
            "description": "Activation code for the user"
          },
          "qrCode": {
            "type": "string",
            "format": "byte",
            "description": "QR code for activation"
          }
        },
        "required": ["iccId", "activationCode", "qrCode"]
      },
      "ListUsersResponse": {
        "title": "ListUsersResponse",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserSummary"
        }
      },
      "UserSummary": {
        "title": "UserSummary",
        "type": "object",
        "properties": {
          "iccId": {
            "type": "string",
            "description": "ICC ID of the user"
          },
          "creationDate": {
            "type": "string",
            "format": "date",
            "description": "User creation date"
          }
        },
        "required": ["iccId", "creationDate"]
      },
      "UserInformationResponse": {
        "title": "UserInformationResponse",
        "type": "object",
        "properties": {
          "iccId": {
            "type": "string",
            "description": "ICC ID of the user"
          },
          "externalId": {
            "type": "string",
            "description": "External identifier for the user"
          },
          "activationCode": {
            "type": "string",
            "description": "Activation code for the user"
          },
          "qrCode": {
            "type": "string",
            "format": "byte",
            "description": "QR code for activation"
          },
          "creationDate": {
            "type": "string",
            "format": "date",
            "description": "User creation date"
          },
          "esimStatus": {
            "type": "string",
            "description": "Current eSIM status"
          },
          "installationStatus": {
            "type": "string",
            "description": "Installation status"
          }
        },
        "required": ["iccId", "activationCode", "qrCode", "creationDate", "esimStatus", "installationStatus"]
      },
      "UserUsageResponse": {
        "title": "UserUsageResponse",
        "type": "object",
        "properties": {
          "iccId": {
            "type": "string",
            "description": "ICC ID of the user"
          },
          "externalId": {
            "type": "string",
            "description": "External identifier for the user"
          },
          "esimStatus": {
            "type": "string",
            "description": "Current eSIM status"
          },
          "installationStatus": {
            "type": "string",
            "description": "Installation status"
          },
          "subscriptionType": {
            "type": "string",
            "description": "Type of subscription"
          },
          "consumptionToday": {
            "type": "string",
            "description": "Data consumption for today"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of countries covered"
          }
        },
        "required": ["iccId", "esimStatus", "installationStatus", "subscriptionType", "consumptionToday", "countries"]
      },
      "NewSubscriptionRequest": {
        "title": "NewSubscriptionRequest",
        "type": "object",
        "properties": {
          "subscriptionType": {
            "type": "string",
            "description": "Type of subscription"
          },
          "subscriptionCountries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of countries for the subscription"
          },
          "subscriptionDuration": {
            "type": "number",
            "description": "Duration of subscription in days"
          },
          "activationType": {
            "type": "string",
            "description": "Activation type",
            "enum": ["IMMEDIATE", "AUTOMATIC", "MANUAL"]
          },
          "transactionRef": {
            "type": "string",
            "description": "Transaction reference"
          }
        },
        "required": ["subscriptionType", "subscriptionCountries", "subscriptionDuration", "activationType"],
        "examples": [
          {
            "subscriptionType": "Comfort Plus",
            "subscriptionCountries": ["NL"],
            "subscriptionDuration": 10,
            "activationType": "IMMEDIATE",
            "transactionRef": "1234567890"
          },
          {
            "subscriptionType": "First Class",
            "subscriptionCountries": ["NL", "TR"],
            "subscriptionDuration": 1,
            "activationType": "AUTOMATIC",
            "transactionRef": "0987654321"
          },
          {
            "subscriptionType": "Comfort Plus",
            "subscriptionCountries": ["global"],
            "subscriptionDuration": 30,
            "activationType": "MANUAL",
            "transactionRef": "1122334455"
          }
        ]
      },
      "SubscriptionResponse": {
        "title": "SubscriptionResponse",
        "type": "object",
        "properties": {
          "iccId": {
            "type": "string",
            "description": "ICC ID of the user"
          },
          "transactionRef": {
            "type": "string",
            "description": "Transaction reference"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction ID"
          },
          "subscriptionType": {
            "type": "string",
            "description": "Type of subscription"
          },
          "status": {
            "type": "string",
            "description": "Subscription status"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of countries covered"
          },
          "creationDate": {
            "type": "string",
            "format": "date",
            "description": "Subscription creation date"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Subscription end date"
          },
          "allowance": {
            "type": "number",
            "description": "Data allowance"
          },
          "numberOfDays": {
            "type": "number",
            "description": "Number of days for the subscription"
          },
          "isThrottled": {
            "type": "boolean",
            "description": "Whether the subscription is throttled"
          },
          "usageForTheDay": {
            "type": "number",
            "description": "Usage for the current day"
          },
          "networkConnection": {
            "type": "boolean",
            "description": "Network connection status"
          }
        },
        "required": ["iccId", "transactionId", "subscriptionType", "status", "countries", "creationDate", "allowance"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}